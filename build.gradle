buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mcVersion}-${modVersion}"
group = "net.insomniakitten.mvillage"
archivesBaseName = "mvillage"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${mcVersion}-${mcfVersion}"
    mappings = mcpMappings
    runDir = 'run'

    replace '%MODVERSION%', modVersion
    replace '%CTMVERSION%', ctmVersion
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info', 'pack.mcmeta'
        expand  'mod_version': modVersion,
                'mc_version': mcVersion
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', 'pack.mcmeta'
    }

    doLast {
        fileTree(dir: sourceSets.main.output.resourcesDir, include: '**/*.png').getFiles().forEach {
            rewritePng(it)
        }
    }
}

def rewritePng(java.io.File file) {
    java.awt.image.BufferedImage image = null
    try {
        image = javax.imageio.ImageIO.read(file)
    } catch(IOException e) {
        println "Skipping $file"
    }
    if(image != null) {
        javax.imageio.ImageIO.write(image, 'png', file)
    }
}

repositories {
    maven { url = "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://maven.tterrag.com" }
    maven { url "http://tehnut.info/maven" }
}

dependencies {
    deobfCompile "mcp.mobius.waila:Hwyla:${hwylaVersion}:api"
    deobfCompile "team.chisel.ctm:CTM:${ctmVersion}:api"
    deobfCompile "mezz.jei:jei_${jeiVersion}:api"

    runtime "mcp.mobius.waila:Hwyla:${hwylaVersion}"
    runtime "team.chisel.ctm:CTM:${ctmVersion}"
    runtime "mezz.jei:jei_${jeiVersion}"
//    runtime "team.chisel:Chisel:${chiselVersion}"
}
